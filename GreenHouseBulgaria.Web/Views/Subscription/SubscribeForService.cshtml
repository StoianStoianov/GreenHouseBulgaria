@model GreenHouseBulgaria.Web.ViewModels.SubscriptionViewModel

@{
    ViewBag.Title = "SubscribeForService";
}

<h2>SubscribeForService</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SubscriptionViewModel</h4>
        <hr />       
        @Html.HiddenFor(model => model.ServicePriceViewModel.Title)
        @Html.HiddenFor(model => model.ServicePriceViewModel.Description)
        @Html.HiddenFor(model => model.ServicePriceViewModel.Price)
        @Html.HiddenFor(model => model.ServicePriceId)
        <div class="form-group">
            @Html.Label("Абонирате се за:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea class="control-label col-md-2">@(Model.ServicePriceViewModel.Title + "/n" + Model.ServicePriceViewModel.Description)</textarea> 
            </div>
        </div>      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SubscriberName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubscriberName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubscriberName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.SubscriptionDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.TextBoxFor(model => model.SubscriptionDateTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.SubscriptionDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelephoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TelephoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelephoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
@Scripts.Render("~/bundles/jquery")

    <script type="text/javascript">
        $(function() { // will trigger when the document is ready
            $('.datepicker').datepicker(); //Initialise any date pickers
        });

    </script>
}