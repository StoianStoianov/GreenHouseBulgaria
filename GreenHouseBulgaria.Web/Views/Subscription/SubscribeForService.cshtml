@model GreenHouseBulgaria.Web.ViewModels.SubscriptionViewModel

@{
    ViewBag.Title = "SubscribeForService";
}

<style>
    input {
        align-content: center;
    }
</style>
<div class="container fadeUpEffect">
    <div class="row wiwet-welcome">
        <div class="col-sm-8 col-sm-offset-2 text-center wiwet-skript-contact">
            <h2>Абониране за услуга</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr/>
                    @Html.HiddenFor(model => model.ServicePriceViewModel.Title)
                    @Html.HiddenFor(model => model.ServicePriceViewModel.Description)
                    @Html.HiddenFor(model => model.ServicePriceViewModel.Price)
                    @Html.HiddenFor(model => model.ServicePriceId)
                    @Html.HiddenFor(model => model.ServicePriceViewModel.Title)
                    @Html.HiddenFor(model => model.ServicePriceViewModel.Description)
                    @Html.HiddenFor(model => model.ServicePriceViewModel.ServiceViewModel.Title)
                    @Html.HiddenFor(model => model.ServicePriceViewModel.ServiceViewModel.Content)
                    <div class="form-group">
                       
                        <h3>
                            @Model.ServicePriceViewModel.ServiceViewModel.Title <br> @Model.ServicePriceViewModel.Title <br/> @Model.ServicePriceViewModel.Description
                        </h3>
                    </div>
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    <div class="form-group">
                       
                        <div class="col-md-10">
                            @Html.ValidationMessageFor(model => model.SubscriberName, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.SubscriberName, new {htmlAttributes = new {@class = "form-control col-md-offset-2 col-md-10", placeholder = @Html.DisplayNameFor(m => m.SubscriberName)}})
                            @*@Html.ValidationMessageFor(model => model.SubscriberName, "", new {@class = "text-danger"})*@
                        </div>
                    </div>

                    <div class="form-group">
                      
                        <div class="col-md-10">
                            @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Adress, new {htmlAttributes = new {@class = "form-control col-md-offset-2 col-md-10", placeholder = @Html.DisplayNameFor(m => m.Adress)}})
                            @*@Html.ValidationMessageFor(model => model.Adress, "", new {@class = "text-danger"})*@
                        </div>
                    </div>

                    <div class="form-group">
                       
                        <div class="col-md-10 ">
                            @Html.ValidationMessageFor(model => model.SubscriptionDateTime, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.SubscriptionDateTime, new {@class = "form-control col-md-offset-2 col-md-10", placeholder = @Html.DisplayNameFor(m => m.SubscriptionDateTime)})
                            @*@Html.ValidationMessageFor(model => model.SubscriptionDateTime, "", new {@class = "text-danger"})*@
                        </div>
                    </div>

                    <div class="form-group">
                        
                        <div class="col-md-10">
                            @Html.ValidationMessageFor(model => model.TelephoneNumber, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.TelephoneNumber, new {htmlAttributes = new {@class = "form-control col-md-offset-2 col-md-10", placeholder = @Html.DisplayNameFor(m => m.TelephoneNumber)}})
                            @*@Html.ValidationMessageFor(model => model.TelephoneNumber, "", new {@class = "text-danger"})*@
                        </div>
                    </div>

                    <div class="form-group">
                        
                        <div class="col-md-10">
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.Email, new {@class = "form-control col-md-offset-2 col-md-10", placeholder = @Html.DisplayNameFor(m => m.Email)})
                            @*@Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})*@
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Абониране" class="btn btn-default"/>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@section scripts{

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")



    <script type="text/javascript">
        //$(function () { // will trigger when the document is ready
        //    $('.datepicker').datepicker({
        //        dateFormat: 'dd-mm-yy'

        //    }); //Initialise any date pickers
        //});
        $(function () { // will trigger when the document is ready
            $('#SubscriptionDateTime').datepicker({
                dateFormat: 'dd-mm-yy'

            }); //Initialise any date pickers
        });
    </script>
}
